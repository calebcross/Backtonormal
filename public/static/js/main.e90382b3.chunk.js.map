{"version":3,"sources":["components/Time.jsx","components/Partially.jsx","components/Fully.jsx","components/VacChart.jsx","components/Test.jsx","components/List.jsx","App.js","reportWebVitals.js","index.js"],"names":["Time","data","scope","pop","entry","Census","vdd","Doses_Distributed","advdg","className","end","Math","ceil","evaluate","Partially","title","Administered_Dose1_Recip","Administered_Dose1_Pop_Pct","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","toLocaleString","suffix","decimals","toString","length","Fully","Series_Complete_Yes","Series_Complete_Pop_Pct","getChartInfo","gql","findDates","entriesBy","labels","forEach","includes","date","push","sort","a","b","Date","map","label","split","pluck","key","VacChart","useQuery","loading","error","chartData","datasets","backgroundColor","borderColor","lineTension","options","tooltips","displayColors","titleFontSize","bodyFontSize","xPadding","yPadding","callbacks","tooltipItem","value","plugins","legend","display","color","scales","y","suggestedMax","ticks","callback","val","index","grid","stack","x","this","getLabelForValue","getStateInfo","Test","states","datas","borderWidth","text","responsive","elements","center","fontStyle","sidePadding","maintainAspectRatio","minFontSize","lineHeight","width","height","List","newArr","Accordion","defaultActiveKey","reduce","renderArr","state","i","name","Card","Toggle","as","Header","eventKey","Collapse","Body","getInfo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e90382b3.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport CountUp from 'react-countup';\nimport {evaluate} from 'mathjs'\nimport axios from 'axios';\n\n\nfunction Time({ data }) {\n\n\tconst CDC_url = 'https://covid.cdc.gov/covid-data-tracker/COVIDData/getAjaxData?id=vaccination_data'\n\n/* \tuseEffect( () => {\n\t\t\taxios.get(CDC_url)\n\t\t\t.then( response =>{} )\n\t\t\t.catch(err => {console.log(err)})\n\t}, []) */\n\n    let scope = {\n        pop: data.entry.Census,\n        vdd: data.entry.Doses_Distributed,\n        advdg: 1367822\n    }\n\n\n\treturn (\n\t\t<div className='time'>\n\t\t\t<div className='card border-dark mb-3'>\n\t\t\t\t<div className='card-header card-header-center text-uppercase'>\n\t\t\t\t\t<h1 className='display-6 text-center fw-bold'>\n\t\t\t\t\t\tDays until\n\t\t\t\t\t\tnormal:\n\t\t\t\t\t\t<br /></h1>\n                         <h2 className=\" display-3 text-center\"><CountUp end={Math.ceil(evaluate ( `((pop * .7) - (vdd * .5))/(advdg * .5 )`, scope))} /> days</h2>\n \t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div className='d-flex justify-content-evenly flex-wrap'></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Time;\n//console.log( evaluate ( `((${scope.pop} * .7) - (${scope.vdd} * .5))/(${scope.advdg} * .5 )`))\n\n/*     let US_population = population\nlet num_vaccinated=  94772329\nlet num_infected  =  83100000\nlet vaccine_efficacy  = 0.9\nlet herd_immunity_portion = 0.85\n\n\nlet portion_pre_immune = 0.30\nlet num_pre_immune = portion_pre_immune * US_population\n\nlet portion_at_risk = 1.0 - (num_pre_immune + num_infected)/US_population\n\nlet num_new_vaccine_immune = num_vaccinated*vaccine_efficacy*portion_at_risk\n\n\nlet num_immune = num_pre_immune + num_infected + num_new_vaccine_immune\nlet herd_immunity_target = herd_immunity_portion*US_population\n\nlet num_needed = herd_immunity_target - num_immune\n\nlet num_vaccines_per_day = scope.advdg\n let num_new_immune_per_day = num_vaccines_per_day*portion_at_risk*vaccine_efficacy\n\nlet days_to_herd_immunity = num_needed / num_new_immune_per_day */","import React from \"react\";\nimport CountUp from 'react-countup';\n\n\nfunction Partially({ title, data}) {\n\n\n\tconst { Administered_Dose1_Recip, Administered_Dose1_Pop_Pct} = data.entry;\n\treturn (\n\t\t<div className=\"partially\">\n\t\t\t<div className='card border-dark mb-3'>\n\t\t\t\t<div className='card-header card-header-vcenter text-uppercase'>\n                <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"syringe\" className=\"svg-inline--fa fa-syringe fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M201.5 174.8l55.7 55.8c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-55.7-55.8-45.3 45.3 55.8 55.8c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0L111 265.2l-26.4 26.4c-17.3 17.3-25.6 41.1-23 65.4l7.1 63.6L2.3 487c-3.1 3.1-3.1 8.2 0 11.3l11.3 11.3c3.1 3.1 8.2 3.1 11.3 0l66.3-66.3 63.6 7.1c23.9 2.6 47.9-5.4 65.4-23l181.9-181.9-135.7-135.7-64.9 65zm308.2-93.3L430.5 2.3c-3.1-3.1-8.2-3.1-11.3 0l-11.3 11.3c-3.1 3.1-3.1 8.2 0 11.3l28.3 28.3-45.3 45.3-56.6-56.6-17-17c-3.1-3.1-8.2-3.1-11.3 0l-33.9 33.9c-3.1 3.1-3.1 8.2 0 11.3l17 17L424.8 223l17 17c3.1 3.1 8.2 3.1 11.3 0l33.9-34c3.1-3.1 3.1-8.2 0-11.3l-73.5-73.5 45.3-45.3 28.3 28.3c3.1 3.1 8.2 3.1 11.3 0l11.3-11.3c3.1-3.2 3.1-8.2 0-11.4z\"></path></svg>\n                <strong>{title}</strong></div>\n\t\t\t\t<div className='d-flex justify-content-evenly flex-wrap'>\n\t\t\t\t\t<div className='card-body text-center '>\n\t\t\t\t\t\t<h4 className='card-title fw-bold display-6'><strong>{!Administered_Dose1_Recip ? 0 : Administered_Dose1_Recip.toLocaleString()}</strong></h4>\n\t\t\t\t\t\t<p className='card-text fw-bold'><strong>people</strong></p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='card-body text-center'>\n\t\t\t\t\t\t<h4 className='card-title fw-bold display-6'>{<CountUp suffix={\"%\"} decimals={Administered_Dose1_Pop_Pct.toString().length === 2 ? 0 : 1} end={Administered_Dose1_Pop_Pct} />}</h4>\n\t\t\t\t\t\t<p className='card-text text-center fw-bold '>of the population</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Partially;\n","import React from \"react\";\nimport CountUp from 'react-countup';\n\nfunction Fully({ title, data} ) {\n\n\n\tconst { Series_Complete_Yes, Series_Complete_Pop_Pct} = data.entry\n\n\treturn (\n\t\t<div className='fully'>\n\t\t\t<div className='card border-dark mb-3'>\n\t\t\t\t<div className='card-header card-header-vcenter text-uppercase'>\n                <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"syringe\" className=\"svg-inline--fa fa-syringe fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M201.5 174.8l55.7 55.8c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-55.7-55.8-45.3 45.3 55.8 55.8c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0L111 265.2l-26.4 26.4c-17.3 17.3-25.6 41.1-23 65.4l7.1 63.6L2.3 487c-3.1 3.1-3.1 8.2 0 11.3l11.3 11.3c3.1 3.1 8.2 3.1 11.3 0l66.3-66.3 63.6 7.1c23.9 2.6 47.9-5.4 65.4-23l181.9-181.9-135.7-135.7-64.9 65zm308.2-93.3L430.5 2.3c-3.1-3.1-8.2-3.1-11.3 0l-11.3 11.3c-3.1 3.1-3.1 8.2 0 11.3l28.3 28.3-45.3 45.3-56.6-56.6-17-17c-3.1-3.1-8.2-3.1-11.3 0l-33.9 33.9c-3.1 3.1-3.1 8.2 0 11.3l17 17L424.8 223l17 17c3.1 3.1 8.2 3.1 11.3 0l33.9-34c3.1-3.1 3.1-8.2 0-11.3l-73.5-73.5 45.3-45.3 28.3 28.3c3.1 3.1 8.2 3.1 11.3 0l11.3-11.3c3.1-3.2 3.1-8.2 0-11.4z\"></path></svg>\n                <strong>{title}</strong></div>\n\t\t\t\t<div className='d-flex justify-content-evenly flex-wrap'>\n\t\t\t\t\t<div className='card-body text-center '>\n\t\t\t\t\t\t<h4 className='card-title fw-bold display-6'><strong>{!Series_Complete_Yes ? 0 : Series_Complete_Yes.toLocaleString()}</strong></h4>\n\t\t\t\t\t\t<p className='card-text '><strong>people</strong></p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='card-body text-center'>\n\t\t\t\t\t\t<h4 className='card-title fw-bold display-6'><strong>{<CountUp suffix={\"%\"} decimals={!Series_Complete_Yes ? 0 : (Series_Complete_Pop_Pct.toString().length === 2 ? 0 : 1)} end={Series_Complete_Pop_Pct}/>}</strong></h4>\n\t\t\t\t\t\t<p className='card-text text-center'><strong>of the population</strong></p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Fully;\n","//import React, { useEffect, useRef, useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\n\n//import { Chart } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nconst getChartInfo = gql`\n\tquery GetChartInfo {\n\t\tentriesBy(state: \"United States\", from: \"2021-04-01\", to: \"2021-04-28\") {\n\t\t\tdate\n\t\t\tAdministered_Dose1_Pop_Pct\n\t\t\tSeries_Complete_Pop_Pct\n\t\t}\n\t}\n`;\n\nconst findDates = ({ entriesBy }) => {\n\tlet labels = [];\n\tentriesBy.forEach((entry) => {\n\t\tif (!labels.includes(entry.date)) {\n\t\t\tlabels.push(entry.date);\n\t\t}\n\t});\n\n\tlet newLabels = [...labels].sort((a, b) => {\n\t\tlet x = new Date(a)\n\t\tlet y = new Date(b)\n\t\treturn x-y\n\t})\n\n\treturn newLabels.map((label) => label.split('2021-').[1]);\n};\n\nconst pluck = ({ entriesBy }, key) => {\n\tlet newArr = [...entriesBy].sort((a, b) => {\n\n\t\tif (a.date < b.date) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (a.date > b.date) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t});\n\n\treturn newArr.map((entry) => {\n\t\treturn entry[key];\n\t});\n};\n\nfunction VacChart() {\n\tconst { loading, error, data } = useQuery(getChartInfo);\n\n\tif (loading) return <p>Loading...</p>;\n\tif (error) return <p>Error :(</p>;\n\n\tlet partially = \"Administered_Dose1_Pop_Pct\";\n\tlet fully = \"Series_Complete_Pop_Pct\";\n\n\tconst chartData = {\n\t\tlabels: findDates(data),\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: \"Partially Vaccinated\",\n\t\t\t\tbackgroundColor: \"rgb(255,183,78)\",\n\t\t\t\tborderColor: \"rgb(255,183,78)\",\n\t\t\t\tlineTension: 0.4,\n\t\t\t\tdata: pluck(data, [partially]),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: \"Fully Vaccinated\",\n\t\t\t\tbackgroundColor: \"rgb(187,222,251)\",\n\t\t\t\tborderColor: \"rgb(187,222,251)\",\n\t\t\t\tlineTension: 0.4,\n\t\t\t\tdata: pluck(data, [fully]),\n\t\t\t},\n\t\t],\n\t};\n\n\tconst options = {\n\t\ttooltips: {\n\t\t\tdisplayColors: false,\n\t\t\ttitleFontSize: 16,\n\t\t\tbodyFontSize: 14,\n\t\t\txPadding: 10,\n\t\t\tyPadding: 10,\n\t\t\tcallbacks: {\n\t\t\t\tlabel: (tooltipItem, data) => {\n\t\t\t\t\treturn `${tooltipItem.value}%`\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: true,\n\t\t\t\tlabels: {\n\t\t\t\t\tcolor: \"#fff\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tscales: {\n\t\t\ty: {\n\t\t\t\tsuggestedMax: 50,\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: function (val, index) {\n\t\t\t\t\t\treturn val + \"%\";\n\t\t\t\t\t},\n\t\t\t\t\tcolor: \"white\",\n\t\t\t\t},\n\t\t\t\tgrid: {\n\t\t\t\t\tcolor: \"#444\",\n\t\t\t\t},\n\t\t\t\tstack: true,\n\t\t\t},\n\t\t\tx: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: function(val, index) {\n\t\t\t\t\t\treturn index % 2 === 0 ? this.getLabelForValue(val) : '';\n\t\t\t\t\t  },\n\t\t\t\t\tcolor: \"white\",\n\t\t\t\t},\n\t\t\t\tgrid: {\n\t\t\t\t\tcolor: \"#444\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t};\n\n\treturn (\n\t\t<div className='card border-dark mb-3'>\n\t\t\t<div className='card-header text-center white fs-4 fw-bold'>\n\t\t\t\tVaccinated Percentage of the Population\n\t\t\t</div>\n\t\t\t<div className='card-body'>\n\t\t\t\t<Line data={chartData} options={options} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default VacChart;\n","//import React, { useEffect, useRef, useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Partially from \"./Partially\";\nimport Fully from \"./Fully\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Chart } from 'chart.js'\n\nconst getStateInfo = gql`\n\tquery getStateInfo {\n\t\tstates {\n\t\t\tname\n\t\t\tentry(date: \"2021-04-28\") {\n\t\t\t\tCensus\n\t\t\t\tAdministered_Dose1_Recip\n\t\t\t\tAdministered_Dose1_Pop_Pct\n\t\t\t\tSeries_Complete_Yes\n\t\t\t\tSeries_Complete_Pop_Pct\n\t\t\t\tDoses_Distributed\n\t\t\t}\n\t\t}\n\t}\n`;\n\nfunction Test() {\n\tconst { loading, error, data } = useQuery(getStateInfo);\n\n\tif (loading) return <p>Loading...</p>;\n\tif (error) return <p>Error :(</p>;\n\n\tconst { states } = data;\n\n\tlet newArr = [...states].sort((a, b) => {\n\t\tif (a.entry.Series_Complete_Pop_Pct < b.entry.Series_Complete_Pop_Pct) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (a.entry.Series_Complete_Pop_Pct > b.entry.Series_Complete_Pop_Pct) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn 0;\n\t});\n\n\nconst showData = \"45\" + \"%\";\n\n\tconst datas = {\n\t\tlabels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: \"# of Votes\",\n\t\t\t\tdata: [12, 19, 3, 5, 2, 3],\n\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\"rgba(255, 99, 132, 0.2)\",\n\t\t\t\t\t\"rgba(54, 162, 235, 0.2)\",\n\t\t\t\t\t\"rgba(255, 206, 86, 0.2)\",\n\t\t\t\t\t\"rgba(75, 192, 192, 0.2)\",\n\t\t\t\t\t\"rgba(153, 102, 255, 0.2)\",\n\t\t\t\t\t\"rgba(255, 159, 64, 0.2)\",\n\t\t\t\t],\n\t\t\t\tborderColor: [\n\t\t\t\t\t\"rgba(255, 99, 132, 1)\",\n\t\t\t\t\t\"rgba(54, 162, 235, 1)\",\n\t\t\t\t\t\"rgba(255, 206, 86, 1)\",\n\t\t\t\t\t\"rgba(75, 192, 192, 1)\",\n\t\t\t\t\t\"rgba(153, 102, 255, 1)\",\n\t\t\t\t\t\"rgba(255, 159, 64, 1)\",\n\t\t\t\t],\n\t\t\t\tborderWidth: 1,\n\t\t\t},\n\t\t],\n\t\ttext: showData\n\t};\n\n\n\tconst options = {\n\t\tresponsive: true,\n\t\telements: {\n\t\t\tcenter: {\n\t\t\ttext: '90%',\n\t\t\tcolor: \"rgba(255, 99, 132, 1)\",\n\t\t\tfontStyle: 'Arial',\n\t\t\tsidePadding: 20,\n\t\t\t}\n\t\t\t},\n          maintainAspectRatio: false,\n\t\t  plugins: {\n\t\t\t  legend: {\n\t\t\t\t  display: false\n\t\t\t  }\n\t\t  },\n\t\t  elements: {\n\t\t\tcenter: {\n\t\t\t  text: 'Red is 2/3 of the total numbers',\n\t\t\t  color: '#FF6384', // Default is #000000\n\t\t\t  fontStyle: 'Arial', // Default is Arial\n\t\t\t  sidePadding: 20, // Default is 20 (as a percentage)\n\t\t\t  minFontSize: 25, // Default is 20 (in px), set to false and text will not wrap.\n\t\t\t  lineHeight: 25 // Default is 25 (in px), used for when text wraps\n\t\t\t}\n\t\t  }\n\t}\n\n\t\n\n\treturn (\n\t\t<div className='partially'>\n\t\t\t<div className='card border-dark mb-3'>\n\t\t\t\t<div className='card-header card-header-vcenter text-uppercase'>\n\t\t\t\t\t<svg\n\t\t\t\t\t\taria-hidden='true'\n\t\t\t\t\t\tfocusable='false'\n\t\t\t\t\t\tdata-prefix='fas'\n\t\t\t\t\t\tdata-icon='syringe'\n\t\t\t\t\t\tclassName='svg-inline--fa fa-syringe fa-w-16'\n\t\t\t\t\t\trole='img'\n\t\t\t\t\t\txmlns='http://www.w3.org/2000/svg'\n\t\t\t\t\t\tviewBox='0 0 512 512'>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tfill='currentColor'\n\t\t\t\t\t\t\td='M201.5 174.8l55.7 55.8c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-55.7-55.8-45.3 45.3 55.8 55.8c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0L111 265.2l-26.4 26.4c-17.3 17.3-25.6 41.1-23 65.4l7.1 63.6L2.3 487c-3.1 3.1-3.1 8.2 0 11.3l11.3 11.3c3.1 3.1 8.2 3.1 11.3 0l66.3-66.3 63.6 7.1c23.9 2.6 47.9-5.4 65.4-23l181.9-181.9-135.7-135.7-64.9 65zm308.2-93.3L430.5 2.3c-3.1-3.1-8.2-3.1-11.3 0l-11.3 11.3c-3.1 3.1-3.1 8.2 0 11.3l28.3 28.3-45.3 45.3-56.6-56.6-17-17c-3.1-3.1-8.2-3.1-11.3 0l-33.9 33.9c-3.1 3.1-3.1 8.2 0 11.3l17 17L424.8 223l17 17c3.1 3.1 8.2 3.1 11.3 0l33.9-34c3.1-3.1 3.1-8.2 0-11.3l-73.5-73.5 45.3-45.3 28.3 28.3c3.1 3.1 8.2 3.1 11.3 0l11.3-11.3c3.1-3.2 3.1-8.2 0-11.4z'></path>\n\t\t\t\t\t</svg>\n\t\t\t\t\t<strong>Test</strong>\n\t\t\t\t</div>\n\t\t\t\t<div className='d-flex justify-content-evenly flex-wrap'>\n\t\t\t\t\t<div className='card-body text-center '>\n\t\t\t\t\t\t<Doughnut\n\t\t\t\t\t\t\tdata={datas}\n\t\t\t\t\t\t\twidth={300}\n\t\t\t\t\t\t\theight={300}\n\t\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Test;\n","//import React, { useEffect, useRef, useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Partially from \"./Partially\";\nimport Fully from \"./Fully\";\n\nconst getStateInfo = gql`\n\tquery getStateInfo {\n\t\tstates {\n\t\t\tname\n\t\t\tentry(date: \"2021-04-28\") {\n\t\t\t\tCensus\n\t\t\t\tAdministered_Dose1_Recip\n\t\t\t\tAdministered_Dose1_Pop_Pct\n\t\t\t\tSeries_Complete_Yes\n\t\t\t\tSeries_Complete_Pop_Pct\n\t\t\t\tDoses_Distributed\n\t\t\t}\n\t\t}\n\t}\n`;\n\nfunction List() {\n\tconst { loading, error, data } = useQuery(getStateInfo);\n\n\tif (loading) return <p>Loading...</p>;\n\tif (error) return <p>Error :(</p>;\n\n\tconst { states } = data;\n\n\tlet newArr = [...states].sort((a, b) => {\n\t\tif (a.entry.Series_Complete_Pop_Pct < b.entry.Series_Complete_Pop_Pct) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (a.entry.Series_Complete_Pop_Pct > b.entry.Series_Complete_Pop_Pct) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn 0;\n\t});\n\n\treturn (\n\t\t<Accordion defaultActiveKey='0'>\n\t\t\t{newArr.reduce((renderArr, state, i) => {\n\t\t\t\tconst { name } = state;\n\n\t\t\t\tif (\n\t\t\t\t\tname !== \"United States\" && \n\t\t\t\t\tstate.entry.Series_Complete_Pop_Pct &&\n\t\t\t\t\tstate.entry.Administered_Dose1_Recip\n\t\t\t\t) {\n\t\t\t\t\trenderArr.push(\n\t\t\t\t\t\t<Card key={i}>\n\t\t\t\t\t\t\t<Accordion.Toggle as={Card.Header} eventKey={i + 1}>\n\t\t\t\t\t\t\t<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"chevron-down\" className=\"svg-inline--fa fa-chevron-down fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z\"></path></svg>\n\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t</Accordion.Toggle>\n\t\t\t\t\t\t\t<Accordion.Collapse eventKey={i + 1}>\n\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t<Partially title='partially vaccinated' data={state} />\n\t\t\t\t\t\t\t\t\t<Fully title='fully vaccinated' data={state} />\n\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn renderArr;\n\t\t\t}, [])}\n\t\t</Accordion>\n\t);\n}\n\nexport default List;\n","import React from \"react\";\nimport { useQuery, gql } from '@apollo/client';\n\n//components\nimport Time from \"./components/Time\";\nimport Partially from \"./components/Partially\";\nimport Fully from \"./components/Fully\";\n//style\nimport \"./scss/custom.scss\";\nimport VacChart from \"./components/VacChart\";\nimport Test from \"./components/Test\";\nimport List from \"./components/List\";\n\n\nconst getInfo = gql`\n  query GetInfo  {\n    entry (date:\"2021-04-28\" state:\"United States\" ){\n    Census\n    Administered_Dose1_Recip\n    Administered_Dose1_Pop_Pct\n    Series_Complete_Yes\n    Series_Complete_Pop_Pct\n    Doses_Distributed\n    }\n    \n  }\n`;\n\nfunction App() {\n\n  const { loading, error, data } = useQuery(getInfo);\n\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n\treturn (\n\n\t\t\t<div className='d-flex flex-column justify-content-center my-5 mx-2'>\n \t\t\t\t<Time data ={data} />\n\t\t\t<Partially title='partially vaccinated' data={data}/>\n\t\t\t\t\t<Fully title='fully vaccinated' data={data} />\n        <VacChart />\n        <Test />\n       <List />\n\t\t\t</div>\n\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from \"@apollo/client/react\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloClient, InMemoryCache} from \"@apollo/client\";\n\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <React.StrictMode>\n  <ApolloProvider client={client}>\n    <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}